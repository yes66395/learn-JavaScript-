/*function su(a,b)
{
    console.log(a+b);
}
su(1,2);*/

/*

function Q  (num){
return num % 2 == 0;
}
    var result = Q(2);
    console.log("result="+result);*/
/*
    function area (r){
       return 3.14*r*r;
    }
    result = area(5);
    console.log(result);*/


    //JavaScript this

    //this指向的是一個對象 這個對象稱函數執行的上下文對象
    //根據function的調用方式不同 this會指向不同的對象
    //1. 以函數(function)的形式調用時，this永遠都是window
    //2. 以方法(method)形式調用，this就是調用方法的那個對象


    //構造function
    // 構造函數就是一個普通函數
    //不同的是首字母大寫以及調用方式不同 需使用new關鍵字來使用

    /*構造函數的執行流程
    1.立刻創建新的對象

    
    
    
    */
    //prototype 原型
    
/*   
內建對象

宿主對象

自定義對象

陣列(Array)
也是一個對象
*/ 

//而陣列使用數字來作為索引(index)操作元素
//索引 從0開始的整數
//使用typeof檢查 會返回object
/*
var arr = [10,30,50,70,90];

var a = arr;
a.length=6;

console.log(a);*/

//Dom簡介

/*Document Object Model 

文件物件模型

文件:

文件表示的就是整個的HTML網頁檔案
------------------------------------------------
物件:

對象表示將網頁中的每一個部分都轉換為一個對象
------------------------------------------------
模型:

使用模型來表示對象之間的關係 方便獲取
----------------------------------------------------
瀏覽器已經為我們提供文件節點 對象這個對象是window屬性
文件節點代表的是整個網頁
*/
//------------------------------------------------------
//JS事件 

/*



就是文件或瀏覽器窗口中發生一些特定的交互瞬間
例如 點擊按鈕 鍵盤輸入之類的





*/